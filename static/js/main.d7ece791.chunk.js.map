{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","activeNote","note","type","payload","startLoadingNotes","dispatch","setNotes","addNewNote","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","console","log","message","finally","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","PrivateRoute","isAuthenticated","Component","rest","props","prototype","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d7ece791.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst  firebaseConfig = {\r\n    apiKey: \"AIzaSyCi_DTpyrMrJOKbzOAuR4nYh3p2Fw8UUEw\",\r\n    authDomain: \"react-app-curso-e31de.firebaseapp.com\",\r\n    projectId: \"react-app-curso-e31de\",\r\n    storageBucket: \"react-app-curso-e31de.appspot.com\",\r\n    messagingSenderId: \"939305870583\",\r\n    appId: \"1:939305870583:web:fcced2ca04888514d25ff2\"\r\n};\r\n\r\nconst firebaseConfigTesting = {\r\n    apiKey: \"AIzaSyBB6qtclJUgAtMcpUkEpLSlhv_6qi_KWVE\",\r\n    authDomain: \"test-react-a0ad2.firebaseapp.com\",\r\n    databaseURL: \"https://test-react-a0ad2-default-rtdb.firebaseio.com\",\r\n    projectId: \"test-react-a0ad2\",\r\n    storageBucket: \"test-react-a0ad2.appspot.com\",\r\n    messagingSenderId: \"631937221595\",\r\n    appId: \"1:631937221595:web:c517deb1790eec98bbddfe\"\r\n};\r\n\r\nif( process.env.NODE_ENV === 'test' ){\r\n    // testing\r\n    firebase.initializeApp(firebaseConfigTesting);\r\n}else{\r\n    // dev/prod\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","\r\n\r\nexport const fileUpload = async(file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/durzgxdco/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try{\r\n        \r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else{\r\n            return null;\r\n        }\r\n\r\n    } catch( error ){\r\n        throw error;\r\n    }\r\n\r\n}\r\n","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n}","export const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note saved',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Deleted note',\r\n    notesLogoutCleaning: '[Notes] Logout cleaning',\r\n\r\n}","import Swal from 'sweetalert2';\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const startNewNote = () =>{\r\n    return  async(dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n    \r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n\r\n    } \r\n}\r\n\r\nexport const activeNote = (id, note) =>({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async(dispatch) => {\r\n        const notes = await loadNotes( uid );\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = (note) =>{\r\n    return async ( dispatch, getState ) => { \r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        if(!note.url){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update(noteToFirestore);\r\n        \r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) =>({\r\n\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note:{\r\n            id, ...note\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const startUploading = (file) =>{\r\n    return async(dispatch, getState) =>{\r\n        const {active:activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () =>{\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote))\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) =>{\r\n    return async(dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n\r\n    type: types.notesDelete,\r\n    payload: id\r\n\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    const handleSave = () =>{\r\n        dispatch(startSaveNote(active))\r\n    }\r\n\r\n    const handlePictureClick = () =>{\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) =>{\r\n        const file = e.target.files[0];\r\n        if(file){\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handlePictureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { active:note } = useSelector(state => state.notes)  \r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const { body, title, id } = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => {\r\n        \r\n        if(note.id !== activeId.current){\r\n            reset(note)\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(activeNote(formValues.id, {... formValues}))\r\n\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes_content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea \r\n                    className=\"notes__textarea\" \r\n                    placeholder=\"What happened today\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                >\r\n                </textarea>\r\n\r\n                {\r\n                    (note.url) &&\r\n                    (<div className=\"notes__image\">\r\n                        <img \r\n                            src={note.url}\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>)\r\n                }\r\n\r\n            </div>\r\n\r\n            <button \r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa_star fa-4x mt-5\"></i>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) =>({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () =>({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading  = () =>({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading   = () =>({\r\n    type: types.uiFinishLoading\r\n});","import Swal from 'sweetalert2';\r\n\r\nimport {firebase, googleAuthProvider} from '../firebase/firebase-config';\r\nimport { types } from \"../types/types\";\r\nimport { noteLogout } from './notes';\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) =>{\r\n\r\n        dispatch( startLoading() );\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({user}) => {\r\n                dispatch( login(user.uid, user.displayName) );\r\n            })\r\n            .catch(e =>{\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n            .finally(()=>{\r\n                dispatch(finishLoading())\r\n            });\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) =>{\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async({user}) => {\r\n\r\n                await user.updateProfile({ displayName: name });\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch(e =>{\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) =>{\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({user}) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) =>({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react'\r\nimport moment from 'moment';\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const noteDate = moment(date);\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id, {date, title, body, url}));\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer\"\r\n            onClick={handleEntryClick}\r\n        >\r\n            \r\n           {\r\n                url &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})` \r\n                    }}\r\n                > </div>\r\n            }\r\n\r\n            <div className=\"journal_entry-body\">\r\n                <p className=\"journal_entry-title\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal_entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={note.id}\r\n                        {... note}\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name} </span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelected />)\r\n                }\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { login, startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector( state => state.ui ); \r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'lol@gmail.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password));\r\n    }\r\n\r\n    const handleGoogleLogin = () =>{\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form onSubmit={handleLogin}>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <hr />\r\n                <div className=\"auth__social-network\">\r\n                    <p>Login With Social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link to=\"/auth/register\" className=\"link\">\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const RegisterScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector( state => state.ui ); \r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: 'dr. lol',\r\n        email: 'lol@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const {name, email, password, password2} = formValues;\r\n\r\n    const handleRegister = (e) =>{\r\n        e.preventDefault();\r\n        \r\n        if ( isFormValid() ){\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n        }\r\n    }\r\n    \r\n    const isFormValid = () =>{\r\n\r\n        if(name.trim().length === 0) {\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        } else if( !validator.isEmail(email) ){\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if( password !== password2 && password.length < 5){\r\n            dispatch(setError('Password should be at least 6 character and match each other'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form onSubmit={handleRegister}>\r\n\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />      \r\n\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <hr />\r\n                \r\n                \r\n\r\n                <Link to=\"/auth/login\" className=\"link\">\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route path=\"/auth/login\" component={ LoginScreen }/>\r\n                    <Route path=\"/auth/register\" component={ RegisterScreen }/>\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? <Component { ...props } />\r\n                    : (<Redirect to=\"/auth/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.prototype = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n\r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => (\r\n                (!isAuthenticated)\r\n                    ? <Component { ...props } />\r\n                    : (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.prototype = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { firebase } from '../firebase/firebase-config';\r\n\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport {  startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n\r\n            if(user?.uid){\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        });\r\n\r\n    }, [ dispatch, setChecking, setIsLoggedIn ])\r\n\r\n    if(checking){\r\n        return(\r\n            <h1>Espere...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        isAuthenticated={isLoggedIn}  \r\n                        path=\"/auth\" \r\n                        component={ AuthRouter } \r\n                    />\r\n                    \r\n                    <PrivateRoute \r\n                        isAuthenticated={isLoggedIn} \r\n                        exact\r\n                        path=\"/\" \r\n                        component={ JournalScreen } \r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\"/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes]\r\n            }\r\n\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n            \r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state={}, action) =>{\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n    \r\n        case types.logout:\r\n            return{ }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}